<body>
  <!-- Sidenav -->
  <% include ../partials/sidebar %>
  <!-- Main content -->
  <div class="main-content">
    <!-- Top navbar -->
    <% include ../partials/navbar %>
    <!-- Header -->
    <div class="header bg-gradient-primary pb-8 pt-5 pt-md-8">
      <div class="container-fluid">
        <div class="header-body">
        </div>
      </div>
    </div>
    <!-- Page content -->
    <div class="container-fluid mt--8">
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card">
            <!-- Card header -->
            <div class="card-header">
              <h3 class="mb-0">Liste des tâches</h3>
            </div>
            <div class="table-responsive py-4" style="padding-right: 20px; padding-left: 20px;">
              <div id="datatable-basic_wrapper" class="dataTables_wrapper dt-bootstrap4">
                <div class="row">
                  <div class="col-sm-12">
                    <table class="table table-flush dataTable" id="datatable-basic" role="grid"
                      aria-describedby="datatable-basic_info">
                      <thead class="thead-light">
                        <tr role="row">
                          <th class="sorting_asc" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 183.75px;" aria-sort="ascending"
                            aria-label="Titre: activate to sort column descending">Titre</th>
                          <th class="sorting" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 283.9px;" aria-label="Date de début: activate to sort column ascending">Date
                            de début
                          </th>
                          <th class="sorting" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 138.45px;" aria-label="Date de fin: activate to sort column ascending">Date de
                            fin</th>
                          <th class="sorting" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 59.75px;" aria-label="Statut: activate to sort column ascending">Statut</th>
                          <th class="sorting" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 128.5px;" aria-label="Tags: activate to sort column ascending">Tags</th>
                          <th class="sorting" tabindex="0" aria-controls="datatable-basic" rowspan="1" colspan="1"
                            style="width: 20px;" aria-label="Actions: activate to sort column ascending"></th>
                        </tr>
                      </thead>
                      <tfoot>
                        <tr>
                          <th rowspan="1" colspan="1">Titre</th>
                          <th rowspan="1" colspan="1">Date de début</th>
                          <th rowspan="1" colspan="1">Date de fin</th>
                          <th rowspan="1" colspan="1">Statut</th>
                          <th rowspan="1" colspan="1">Tags</th>
                          <th rowspan="1" colspan="1"></th>
                        </tr>
                      </tfoot>
                      <tbody>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- According Tags -->
      <div class="accordion" id="accordionTags">
        <div class="card">
          <div class="card-header" id="headingTags" data-toggle="collapse" data-target="#collapseTags"
            aria-expanded="true" aria-controls="collapseTags">
            <div class="row">
            <h3 class="col-md-4 mb-0">Liste des tags</h3>
            <i class="col-md-1 text-primary fas fa-caret-square-down" style="font-size: 20px;"></i>
          </div>
          </div>
          <div id="collapseTags" class="collapse hide" aria-labelledby="headingTags" data-parent="#accordionTags">
            <div class="card-body">
              <div class="row">
                <div class="col-md-5">
                  <div class="card bg-default shadow">
                    <div class="table-responsive">
                      <table class="table align-items-center table-dark table-flush" id="tableTags">
                        <thead class="thead-dark">
                          <tr>
                            <th scope="col" class="sort" data-sort="name">Titre</th>
                            <th scope="col"></th>
                          </tr>
                        </thead>
                        <tbody class="list">
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Footer -->
      <% include ../partials/footer %>
    </div>
  </div>
  <!-- Include scripts -->
  <% include ../partials/scripts %>
  <script>
    const apiURL = 'http://localhost:5000/api/v1';

    const httpMethod = Object.freeze({
      GET: 'GET',
      POST: 'POST',
      PUT: 'PUT',
      DELETE: 'DELETE',
    });

    // HTTP method asynchronous
    function httpAsync(url, method, callback) {
      const xmlHttp = new XMLHttpRequest();
      // eslint-disable-next-line func-names
      xmlHttp.onreadystatechange = function () {
        if (xmlHttp.readyState === 4 && xmlHttp.status === 200) callback(xmlHttp.responseText);
      };
      xmlHttp.open(method, url, true); // true for asynchronous
      xmlHttp.send(null);
    }

    $(document).ready(function () {
      // Load todos for the datatable
      $.ajax({
        url: `${apiURL}/todos`,
        type: 'GET',
        crossDomain: true,
        dataType: 'json',
        success(data) {
          bindtoDatatable(data.todos);
        },
      });
    });

    // Bind data to datatable
    function bindtoDatatable(data) {
      let DatatableBasic = (function () {
        let e = $('#datatable-basic');
        e.length && e.on('init.dt', function () {
          $('div.dataTables_length select').removeClass('custom-select custom-select-sm');
        })
          .DataTable({
            aaData: data,
            columns: [{
              data: 'title',
            },
            {
              data: 'dateBegin',
            },
            {
              data: 'dateEnd',
            },
            {
              data: 'statut',
            },
            {
              data: 'tags',
            },
            {
              mRender(data, type, row) {
                return `<button class="btn btn-sm updateTodo" data-id="${row._id}" title="Mise à jour"><i class="fas fa-edit text-warning"></i></button><button class="btn btn-sm deleteTodo" data-id="${row._id}" title="Suppression"><i class="fas fa-times text-danger"></i></button>`;
              },
            },
            ],
            keys: !0,
            language: {
              sEmptyTable: 'Aucune donnée disponible dans le tableau',
              sInfo: "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
              sInfoEmpty: "Affichage de l'élément 0 à 0 sur 0 élément",
              sInfoFiltered: '(filtré à partir de _MAX_ éléments au total)',
              sInfoPostFix: '',
              sInfoThousands: ',',
              sLengthMenu: 'Afficher _MENU_ éléments',
              sLoadingRecords: 'Chargement...',
              sProcessing: 'Traitement...',
              sSearch: 'Rechercher :',
              sZeroRecords: 'Aucun élément correspondant trouvé',
              oPaginate: {
                sFirst: 'Premier',
                sLast: 'Dernier',
                sNext: "<i class='fas fa-angle-right'>",
                sPrevious: "<i class='fas fa-angle-left'>",
              },
              oAria: {
                sSortAscending: ': activer pour trier la colonne par ordre croissant',
                sSortDescending: ': activer pour trier la colonne par ordre décroissant',
              },
              select: {
                rows: {
                  _: '%d lignes sélectionnées',
                  '0': 'Aucune ligne sélectionnée',
                  '1': '1 ligne sélectionnée',
                },
              },
            },
          });
      })(),
        DatatableButtons = (function () {
          let e,
            a = $('#datatable-buttons');
          a.length &&
            ((e = {
              lengthChange: !1,
              dom: 'Bfrtip',
              buttons: ['copy', 'print'],
              language: {
                paginate: {
                  previous: "<i class='fas fa-angle-left'>",
                  next: "<i class='fas fa-angle-right'>",
                },
              },
            }),
              a
                .on('init.dt', function () {
                  $('.dt-buttons .btn')
                    .removeClass('btn-secondary')
                    .addClass('btn-sm btn-default');
                })
                .DataTable(e));
        })();

      // Delete todo
      $('.deleteTodo').on('click', function () {
        let id = $(this).data('id');
        let row = $(this)
          .parent()
          .parent();

        // DELETE todo
        const apiURLDelete = `${apiURL}/todos/${id}`;
        httpAsync(apiURLDelete, httpMethod.DELETE, function (callback) {
          let response = JSON.parse(callback);
          if (response.success === 'true') {
            row.remove();
          }

          alert(response.message);
        });
      });

      // Update todo
      $('.updateTodo').on('click', function () {
        const id = $(this).data('id');
        window.location.href = `/update-todo?id=${id}`;
      });
    }

    // GET tags
    httpAsync(apiURL + '/tags', httpMethod.GET, function (callback) {
      let response = JSON.parse(callback);
      if (response.success === 'true') {
        response.tags.forEach(tag => {
          let tdTitle = "<td>" + tag.title + "</td>";
          let tdActions = `<td class="text-right"><button class="btn btn-sm updateTag" data-id="${tag._id}" title="Mise à jour"><i class="fas fa-edit text-warning"></i></button><button class="btn btn-sm deleteTag" data-id="${tag._id}" title="Suppression"><i class="fas fa-times text-danger"></i></button></td>`;
          $("#tableTags > tbody").append("<tr>" + tdTitle + tdActions + "</tr>");
        });
      } else {
        alert(response.message);
      }

      // Delete todo
      $('.deleteTag').on('click', function () {
        let id = $(this).data('id');
        let row = $(this)
          .parent()
          .parent();

        // DELETE tag
        const apiURLDelete = `${apiURL}/tags/${id}`;
        httpAsync(apiURLDelete, httpMethod.DELETE, function (callback) {
          let response = JSON.parse(callback);
          if (response.success === 'true') {
            row.remove();
          }

          alert(response.message);
        });
      });

      // Update tag
      $('.updateTag').on('click', function () {
        const id = $(this).data('id');
        window.location.href = `/update-tag?id=${id}`;
      });
    });
  </script>
</body>